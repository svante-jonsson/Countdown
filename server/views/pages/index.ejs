<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="stylesheet" href="css/tailwind.css" />
        <title>Document</title>
    </head>
    <body>
        <main class="h-screen w-screen flex items-center justify-center">
            <h1 class="text-8xl">120 : 06 : 20 : 55</h1>
            <form action="">
                <input type="text" pattern="([01]?[0-9]|2[0-3]):[0-5][0-9]" placeholder="HH:MM"/>
                <button type="submit">Okej</button>
            </form>
        </main>
    </body>
    <script>
        //är tiden giltlig
        //är tiden idag
        //vad timern ska börja på bestäms
        //nedräkningen börjar
        let inputtedTime = ["15", "5", "30"];

        function setInitalTime(index, left) {
            switch (index) {
                case 0:
                    //Set hours left to correct
                    console.log("Hours: " + left);
                    break;
                case 1:
                    //Set minutes left to correct
                    console.log("Minutes: " + left);
                    break;
                case 2:
                    //Set seconds left to correct
                    console.log("Seconds: " + left);
                    break;

                default:
                    break;
            }
        }

        function updateTime() {
            var today = new Date();
            let currentTime = [
                today.getHours(),
                today.getMinutes(),
                today.getSeconds(),
            ];

            let hoursLeft = inputtedTime[0] - currentTime[0];
            let minutesLeft = inputtedTime[1] - currentTime[1];
            let secondsLeft = inputtedTime[2] - currentTime[2];
            let timeLeft = [hoursLeft, minutesLeft, secondsLeft];

            for (let i = 0; i < timeLeft.length; i++) {
                let element = timeLeft[i];
                if (element < 1) {
                    setInitalTime(i, 0);
                } else {
                    setInitalTime(i, element);
                }
            }
        }

        setInterval(function () {
            updateTime();
        }, 1000);

        //If the user time is outside the 24-hour clock (military time) it is deemed invalid
        function validTime(userHour, userMinute) {
            if (userHour > 23 || userHour < 0) {
                return false;
            }
            if (userMinute > 59 || userMinute < 0) {
                return false;
            }
            return true;
        }

        //Returns true if the user inputted time is later than the current time
        function sameDay(userHour, userMinute) {
            let currentTime = new Date();
            let currentHour = currentTime.getHours;
            let currentMinute = currentTime.getMinutes;

            let hoursLeft = userHour > currentHour;
            let minutesLeft = userMinute > currentMinute;

            if (hoursLeft) {
                //If the user hour is greater than the current hour, it will be assumed that it is the same day
                return true;
            } else {
                if (userHour == currentHour && minutesLeft) {
                    //If the user hour is equal to the current hour, as well as, the user minute is greater than the current minute, it will be assumed that it is the same day
                    return true;
                } else {
                    //If none of the condistions are met, it will be assumed that it is not the same day
                    return false;
                }
            }
        }
    </script>
</html>
